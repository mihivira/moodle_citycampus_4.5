{"version":3,"file":"reportes_uo_main.min.js","sources":["../src/reportes_uo_main.js"],"sourcesContent":["/**\n * Módulo AMD para el dashboard de reportes por UO (sin jQuery).\n *\n * @module local_hoteles_city_dashboard/reportes_uo_main\n * @copyright  2025\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    'core/log',\n    'local_hoteles_city_dashboard/xlsx',\n    'local_hoteles_city_dashboard/jspdf',\n    'local_hoteles_city_dashboard/html2canvas',\n    'local_hoteles_city_dashboard/autotable',\n    'local_hoteles_city_dashboard/config',\n    'local_hoteles_city_dashboard/reportes_uo',\n], function(Log, XLSX, jsPDF, html2canvas, autoTable, unused, ReportesUo) {\n\n    // Estado interno\n    let tab = 'avance';\n    let customHistory = [];\n    let uniqid = null;\n\n    /**\n     * Inicializa el módulo.\n     *\n     * @param {string} uniqueId\n     * @param {string} regions\n     * @param {string} type\n     */\n    function init(uniqueId, regions, type) {\n        uniqid = uniqueId;\n        window.console.log('[ReportesUO] Inicializando con:', { uniqid, regions, type });\n\n        // Esperar a que el DOM esté listo\n       // if (document.readyState === 'loading') {\n         //   document.addEventListener('DOMContentLoaded', setupEventListeners);\n        //} else {\n        setupEventListeners(uniqid);\n        //}\n\n        // Cargar contenido inicial\n        loadGraphics(uniqid,regions, type);\n    }\n\n    /**\n     * Configura todos los eventos del DOM.\n     */\n    function setupEventListeners(uniqid) {\n        window.console.log('[ReportesUO] Configurando eventos (sin jQuery)');\n\n        // === 1. Botones de exportación ===\n        const exportPdfBtn = document.getElementById('exportpdf');\n        const exportExcelBtn = document.getElementById('exportexcel');\n        const returnBtn = document.getElementById('return');\n\n        if (exportPdfBtn) {\n            exportPdfBtn.addEventListener('click', () => {\n                window.console.log('Exportar a PDF');\n                const titleReport = document.getElementById('tittable')?.textContent.trim() || 'Reporte';\n                exportPdf(titleReport);\n            });\n        }\n\n        if (exportExcelBtn) {\n            exportExcelBtn.addEventListener('click', () => {\n                window.console.log('Exportar a Excel');\n                const titleReport = document.getElementById('tittable')?.textContent.trim() || 'Reporte';\n                exportExcel('tdata', titleReport);\n            });\n        }\n\n        if (returnBtn) {\n            returnBtn.addEventListener('click', () => {\n                window.console.log('Regresar en historial');\n                if (customHistory.length > 1) {\n                    customHistory.pop(); // actual\n                    const lastRequest = customHistory.pop();\n                    loadGraphics(lastRequest.regions, lastRequest.type);\n                } else {\n                    returnBtn.style.display = 'none';\n                }\n            });\n        }\n\n        // === 2. Pestañas (Bootstrap 4 usa eventos nativos) ===\n        document.querySelectorAll('a[data-toggle=\"tab\"]').forEach(tabEl => {\n            window.console.log('Pestaña encontrada:', tabEl.id);\n            tabEl.addEventListener('click', (e) => {\n                const tabId = e.target.id;\n                window.console.log('Pestaña activada:', tabId);\n\n                switch (tabId) {\n                    case 'cert-tab':\n                        tab = 'certificaciones';\n                        loadGraphics(uniqid, '', 'regions-' + tab);\n                        break;\n\n                    case 'user-tab':\n                        tab = 'users';\n                        const tbody = document.getElementById('tbody');\n                        const chartCont = document.getElementById('chart-cont');\n                        if (tbody) tbody.innerHTML = '';\n                        if (chartCont) chartCont.innerHTML = '';\n                        loadGraphics(uniqid, '', 'usuarios-certificaciones');\n                        break;\n\n                    case 'home-tab':\n                        tab = 'avance';\n                        loadGraphics(uniqid, '', 'regions-' + tab);\n                        break;\n\n                    default:\n                        window.console.log('Pestaña no manejada:', tabId);\n                }\n            });\n        });\n\n        // === 3. Evento personalizado: tablaLlena ===\n        const tdata = document.getElementById('tdata');\n        if (tdata) {\n            tdata.addEventListener('tablaLlena', () => {\n                window.console.log('Evento tablaLlena recibido');\n                hideLoading();\n\n                const tabContent = document.getElementById('myTabContent');\n                if (!tabContent) return;\n\n                if (tab === 'users') {\n                    const titleReport = document.getElementById('tittable')?.textContent.trim() || 'Reporte';\n                    exportExcel('tdata', titleReport);\n                    tabContent.style.display = 'none';\n                } else {\n                    tabContent.style.display = 'block';\n                }\n\n                // Volver a asignar eventos a enlaces .link-uo (por si se regeneran)\n                setupLinkUoEvents();\n            });\n        }\n    }\n\n    /**\n     * Asigna eventos a los enlaces de UO.\n     */\n    function setupLinkUoEvents() {\n        document.querySelectorAll('.link-uo').forEach(link => {\n            link.addEventListener('click', function() {\n                const item = this.dataset.item;\n                const type = this.dataset.type === 'regions-cert'\n                    ? 'uos2-' + tab\n                    : 'uos-' + tab;\n\n                const returnBtn = document.getElementById('return');\n                if (returnBtn) returnBtn.style.display = 'inline-block';\n\n                loadGraphics(item, type);\n            });\n        });\n    }\n\n    /**\n     * Carga gráficos y datos.\n     *\n     * @param {string} regions\n     * @param {string} type\n     */\n    function loadGraphics(uniqid, regions, type) {\n        window.console.log('Cargando gráficos:', { regions, type });\n        showLoading();\n\n        ReportesUo.init(uniqid, regions, type);\n\n        customHistory.push({ regions, type });\n        cleanPage();\n\n    }\n\n    /**\n     * Muestra el overlay de carga.\n     */\n    function showLoading() {\n        const overlay = document.getElementById('overlay');\n        if (overlay) overlay.style.display = 'flex';\n    }\n\n    /**\n     * Oculta el overlay de carga.\n     */\n    function hideLoading() {\n        const overlay = document.getElementById('overlay');\n        if (overlay) overlay.style.display = 'none';\n    }\n\n    function cleanPage() {\n        const tbody = document.getElementById('tbody');\n        const chartCont = document.getElementById('chart-cont');\n        if (tbody) tbody.innerHTML = '';\n        if (chartCont) chartCont.innerHTML = '';\n    }\n\n    /**\n     * Exporta tabla a Excel.\n     *\n     * @param {string} tableId\n     * @param {string} titleReport\n     */\n    function exportExcel(tableId, titleReport) {\n        const table = document.getElementById(tableId);\n        if (!table) return;\n\n        const wb = XLSX.utils.table_to_book(table, { sheet: 'Sheet1' });\n        const date = new Date();\n        const filename = `${titleReport}_${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}.xlsx`;\n        XLSX.writeFile(wb, filename);\n    }\n\n    /**\n     * Exporta tabla y gráfico a PDF.\n     *\n     * @param {string} titleReport\n     */\n    function exportPdf(titleReport) {\n         \n           \n        const table = document.getElementById('tdata');\n        if (!table) return;\n\n        const headers = Array.from(table.querySelectorAll('thead th, thead td'))\n            .map(th => th.textContent.trim());\n\n        const rows = Array.from(table.querySelectorAll('tbody tr'))\n            .map(tr => Array.from(tr.querySelectorAll('td')).map(td => td.textContent.trim()));\n        \n        var pdf = new window.jspdf.jsPDF({\n            orientation: 'landscape'\n        });\n        \n        \n\n        let marginLeft = 15;\n        pdf.autoTable({\n            head: [headers],\n            body: rows,\n            startY: 20,\n            theme: 'grid',\n            margin: { top: 20, bottom: 10 },\n            styles: {\n                cellPadding: 3,\n                fontSize: 10,\n                valign: 'middle',\n                halign: 'center'\n            },\n            columnStyles: {\n                0: { fontStyle: 'bold' }\n            },\n            didDrawPage: (data) => {\n                marginLeft = data.settings.margin.left;\n                pdf.setFontSize(12);\n                pdf.text(titleReport, marginLeft, 10);\n            }\n        });\n\n        // Agregar gráfico (canvas)\n        pdf.addPage();\n        pdf.setFontSize(12);\n        pdf.text(titleReport, marginLeft, 10);\n\n        /* const canvas = document.getElementById('chart-cont');\n        if (canvas) {\n            const imgData = canvas.toDataURL('image/png');\n            pdf.addImage(imgData, 'PNG', 15, 15, 250, 125);\n        }\n\n        const date = new Date();\n        const filename = `${titleReport}_${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}.pdf`;\n        pdf.save(filename); */\n\n\n        // === 3. Buscar el canvas de Chart.js ===\n        const chartContainer = document.getElementById('chart-cont');\n        if (!chartContainer) {\n            console.warn('No se encontró #chart-cont');\n            pdf.save(`${titleReport}.pdf`);\n            return;\n        }\n\n        const canvas = chartContainer.querySelector('canvas');\n        if (!canvas) {\n            console.warn('No se encontró el <canvas> dentro de #chart-cont');\n            pdf.save(`${titleReport}.pdf`);\n            return;\n        }\n\n        // === 4. Esperar a que el canvas tenga dimensiones válidas ===\n        if (canvas.width === 0 || canvas.height === 0) {\n            console.warn('El canvas tiene tamaño 0x0. Esperando...');\n            // Opcional: reintentar después de un breve retraso\n            setTimeout(() => {\n                exportPdf(titleReport); // Reintentar (uso cuidadoso)\n            }, 500);\n            return;\n        }\n\n        // === 5. Usar html2canvas===\n        window.html2canvas(canvas, {\n            scale: 2, // Mejor calidad\n            useCORS: true,\n            logging: false,\n            backgroundColor: '#ffffff'\n        }).then(function(imgData) {\n            // Calcular proporciones\n            const imgWidth = 250;\n            const originalRatio = canvas.height / canvas.width;\n            const imgHeight = imgWidth * originalRatio;\n\n            // Añadir imagen al PDF\n            pdf.addImage(imgData, 'PNG', 15, 15, imgWidth, imgHeight);\n\n            // Guardar\n            const date = new Date();\n            const filename = `${titleReport}_${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}.pdf`;\n            pdf.save(filename);\n        }).catch(err => {\n            console.error('Error al capturar canvas:', err);\n            pdf.save(`${titleReport}.pdf`); // Guardar sin gráfica\n        });\n    }\n\n    // --- Exportar funciones públicas ---\n    return {\n        init: init\n    };\n});"],"names":["define","Log","XLSX","jsPDF","html2canvas","autoTable","unused","ReportesUo","tab","customHistory","uniqid","loadGraphics","regions","type","window","console","log","overlay","document","getElementById","style","display","showLoading","init","push","tbody","chartCont","innerHTML","cleanPage","exportExcel","tableId","titleReport","table","wb","utils","table_to_book","sheet","date","Date","filename","getFullYear","getMonth","getDate","writeFile","exportPdf","headers","Array","from","querySelectorAll","map","th","textContent","trim","rows","tr","td","pdf","jspdf","orientation","marginLeft","head","body","startY","theme","margin","top","bottom","styles","cellPadding","fontSize","valign","halign","columnStyles","fontStyle","didDrawPage","data","settings","left","setFontSize","text","addPage","chartContainer","warn","save","canvas","querySelector","width","height","setTimeout","scale","useCORS","logging","backgroundColor","then","imgData","imgHeight","addImage","catch","err","error","uniqueId","exportPdfBtn","exportExcelBtn","returnBtn","addEventListener","length","pop","lastRequest","forEach","tabEl","id","e","tabId","target","tdata","hideLoading","tabContent","link","item","this","dataset","setupEventListeners"],"mappings":"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"}